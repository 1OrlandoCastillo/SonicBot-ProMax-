//Cod√≠go creado por Destroy wa.me/584120346669

import fs from 'fs';
import path from 'path';

const goodMorningMessages = [
    "¬°Buenos d√≠as! üå∏ Espero que tu d√≠a est√© lleno de alegr√≠a y oportunidades brillantes. Recuerda que cada amanecer es una nueva p√°gina en tu historia.",
    "¬°Buenos d√≠as! ‚òÄÔ∏è Que este nuevo d√≠a te traiga sonrisas y momentos inolvidables. No olvides compartir tu luz con quienes te rodean.",
    "¬°Buenos d√≠as! üåº Espero que hoy encuentres belleza en cada peque√±o detalle y que tu coraz√≥n se llene de felicidad.",
    "¬°Buenos d√≠as! ‚ú® Que este d√≠a est√© lleno de inspiraci√≥n y que cada paso que des te acerque a tus sue√±os. ¬°Disfruta cada momento!",
    "¬°Buenos d√≠as! üå∑ Espero que hoy sea un d√≠a lleno de luz y amor. Recuerda que cada nuevo d√≠a es una nueva oportunidad para brillar.",
    "¬°Buenos d√≠as! üå∫ Que el d√≠a de hoy est√© lleno de alegr√≠a y oportunidades para crecer. No olvides sonre√≠r y disfrutar del viaje.",
];

let handler = async (m, { conn, participants }) => {
    m.react('üéâ');

    if (m.isGroup) {
        // Seleccionar un mensaje y un video aleatorio
        const randomMessage = goodMorningMessages[Math.floor(Math.random() * goodMorningMessages.length)];
        const pp = 'https://telegra.ph/file/c62071be335ec9e97a0cf.mp4';
        const videos = [pp];
        const video = videos[Math.floor(Math.random() * videos.length)];

        // Mensaje de buenos d√≠as
        let str = `${randomMessage}\n> ‡ßé‡≠≠Õ¢‡†≠ùêòùêÆùê§ùê¢_ùêíùêÆùê®ùêÆ-ùêÅùê®ùê≠‚∑≠ìÜ™ÕûÕü·öÄ`.trim();

        // Obtener los JIDs de todos los participantes para mencionarlos
        const allMembers = participants.map(participant => participant.jid);

        // Enviar el mensaje con el video y el mensaje correspondiente, mencionando a todos
        conn.sendMessage(m.chat, { video: { url: video }, gifPlayback: true, caption: str, mentions: allMembers }, { quoted: m });
    }
}

// Este evento se activar√° cuando un miembro se una al grupo
handler.on('group-participants-update', async (update) => {
    // No es necesario agregar l√≥gica aqu√≠, ya que no se requiere el medidor de tiempo
});

handler.help = ['buenosd√≠as'];
handler.tags = ['grupo'];
handler.command = ['buenosd√≠as'];
handler.group = true;

export default handler;
